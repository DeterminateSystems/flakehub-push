name: FlakeHub Push
branding:
  icon: "box"
  color: "purple"
description: "Publish your flakes to FlakeHub."

inputs:
  visibility:
    description: "`public` or `unlisted`"
    required: true
  name:
    description: The name of your published flake. In the format of OrgName/RepoName. OrgName must match your organization's GitHub root name or the publish will fail.
    required: false
    default: null
  repository:
    description: The actual GitHub repository containing your flake. In the format of OrgName/RepoName.
    required: true
    default: ${{ github.repository }}
  mirror:
    description: If the repository is mirrored via DeterminateSystems' mirror functionality. This is only usable by DeterminateSystems.
    required: false
    default: false
  directory:
    description: The path of your flake relative to the root of the repository. Useful for subflakes.
    required: false
    default: null
  git-root:
    description: The root directory of your Git repository.
    required: false
    default: .
  tag:
    description: The Git tag to use, for non-rolling releases. This must be the character `v` followed by a SemVer version, e.g. `v0.1.1`.
    required: false
    default: null
  rolling-minor:
    description: "Specify the SemVer minor version of your rolling releases. All releases will follow the versioning scheme '0.[rolling-minor].[commit count]+rev-[git sha]'"
    required: false
    default: null
  rolling:
    description: |
      For untagged releases, use a rolling versioning scheme.

      When this is enabled, the default versioning scheme is 0.1.[commit count]+rev-[git sha]. To customize the SemVer minor version, set the `rolling-minor` option.
    required: false
    default: false
  host:
    description: "The FlakeHub server to use."
    required: false
    default: "https://api.flakehub.com"
  log-directives:
    description: A comma-separated list of [tracing directives](https://docs.rs/tracing-subscriber/latest/tracing_subscriber/filter/struct.EnvFilter.html#directives). `-`s are replaced with `_`s (such as `nix_installer=trace`).
    required: false
    default: "flakehub_push=info"
  logger:
    description: The logger to use. Options are `pretty`, `json`, `full` and `compact`.
    required: false
    default: "full"
  github-token:
    description: A GitHub token for making authenticated GitHub API requests.
    default: ${{ github.token }}
  extra-tags:
    description: |
      `flakehub-push` automatically uses the GitHub repo's topics as tags. This `extra-tags` parameter enables you to add extra tags beyond that as a comma-separated string. Only alphanumeric characters and hyphens are allowed in tags and the maximum length of tags is 50 characters. You can specify a maximum of 20 extra tags, and have a maximum of 25 tags, including those that we retrieve from GitHub. Any tags after the 25th will be ignored.
    required: false
    default: ""
  spdx-expression:
    description: A valid SPDX license expression. This will be used in place of what GitHub claims your repository's `spdxIdentifier` is.
    required: false
    default: ""
  flakehub-push-binary:
    description: Run a version of the `flakehub-push` binary from somewhere already on disk. Conflicts with all other `flakehub-push-*` options.
  flakehub-push-branch:
    description: The branch of `flakehub-push` to use. Conflicts with all other `flakehub-push-*` options.
    required: false
    default: main
  flakehub-push-pr:
    description: The PR of `flakehub-push` to use. Conflicts with all other `flakehub-push-*` options.
    required: false
  flakehub-push-revision:
    description: The revision of `flakehub-push` to use. Conflicts with all other `flakehub-push-*` options.
    required: false
  flakehub-push-tag:
    description: The tag of `flakehub-push` to use. Conflicts with all other `flakehub-push-*` options.
    required: false
  flakehub-push-url:
    description: A URL pointing to a `flakehub-push` binary. Overrides all other `flakehub-push-*` options.
    required: false

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-docker-container-actions
runs:
  using: composite
  steps:
  - name: Install `flakehub-push`
    shell: bash
    env:
      FLAKEHUB_PUSH_VISIBLITY: ${{ inputs.visibility }}
      FLAKEHUB_PUSH_TAG: ${{ inputs.tag }}
      FLAKEHUB_PUSH_ROLLING_MINOR: ${{ inputs.rolling-minor }}
      FLAKEHUB_PUSH_ROLLING: ${{ inputs.rolling }}
      FLAKEHUB_PUSH_HOST: ${{ inputs.host }}
      FLAKEHUB_PUSH_LOG_DIRECTIVES: ${{ inputs.log-directives }}
      FLAKEHUB_PUSH_LOGGER: ${{ inputs.logger }}
      FLAKEHUB_PUSH_GITHUB_TOKEN: ${{ inputs.github-token }}
      FLAKEHUB_PUSH_NAME: ${{ inputs.name }}
      FLAKEHUB_PUSH_MIRROR: ${{ inputs.mirror }}
      FLAKEHUB_PUSH_REPOSITORY: ${{ inputs.repository }}
      FLAKEHUB_PUSH_DIRECTORY: ${{ inputs.directory }}
      FLAKEHUB_PUSH_GIT_ROOT: ${{ inputs.git-root }}
      FLAKEHUB_PUSH_EXTRA_TAGS: ${{ inputs.extra-tags }}
      FLAKEHUB_PUSH_SPDX_EXPRESSION: ${{ inputs.spdx-expression }}
      # Also GITHUB_REPOSITORY, GITHUB_REF_NAME, GITHUB_TOKEN, ACTIONS_ID_TOKEN_REQUEST_TOKEN, ACTIONS_ID_TOKEN_REQUEST_URL
    run: |
      if [ "${RUNNER_OS}" == "Linux" ]; then
        export ARCHITECTURE_OS="Linux"
      else
        echo "${RUNNER_OS} not supported"
        exit 1
      fi

      if [ "${RUNNER_ARCH}" == "X64" ]; then
        export ARCHITECTURE_ARCH="X64"
      else
        echo "${RUNNER_ARCH} not supported"
        exit 1
      fi

      export ARCHITECTURE="${ARCHITECTURE_ARCH}-${ARCHITECTURE_OS}"

      if [ -n "${{ inputs.flakehub-push-url }}" ]; then
        export FLAKEHUB_PUSH_URL="${{ inputs.flakehub-push-url }}"
      else
        if [ -n "${{ inputs.flakehub-push-pr }}" ]; then
          export FLAKEHUB_PUSH_URL="https://install.determinate.systems/flakehub-push/pr/${{ inputs.flakehub-push-pr }}/${ARCHITECTURE}?ci=github"
        elif [ -n "${{ inputs.flakehub-push-tag }}" ]; then
          export FLAKEHUB_PUSH_URL="https://install.determinate.systems/flakehub-push/tag/${{ inputs.flakehub-push-tag }}/${ARCHITECTURE}?ci=github"
        elif [ -n "${{ inputs.flakehub-push-revision }}" ]; then
          export FLAKEHUB_PUSH_URL="https://install.determinate.systems/flakehub-push/rev/${{ inputs.flakehub-push-revision }}/${ARCHITECTURE}?ci=github"
        elif [ -n "${{ inputs.flakehub-push-branch }}" ]; then
          export FLAKEHUB_PUSH_URL="https://install.determinate.systems/flakehub-push/branch/${{ inputs.flakehub-push-branch }}/${ARCHITECTURE}?ci=github"
        else
          export FLAKEHUB_PUSH_URL="https://install.determinate.systems/flakehub-push/stable/${ARCHITECTURE}?ci=github"
        fi
      fi
      echo "Set FLAKEHUB_PUSH_URL=$FLAKEHUB_PUSH_URL"

      if [ -n "${{ inputs.flakehub-push-binary }}" ]; then
        chmod +x ${{ inputs.flakehub-push-binary }}
        exec ${{ inputs.flakehub-push-binary }}
      else
        DEST=$(mktemp -d)
        curl --retry 20 -L $FLAKEHUB_PUSH_URL -o $DEST/flakehub-push
        chmod +x $DEST/flakehub-push
        exec $DEST/flakehub-push
      fi
