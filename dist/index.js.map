{"version":3,"sources":["../ts/index.ts"],"sourcesContent":["import * as actionsCore from \"@actions/core\";\nimport * as actionsExec from \"@actions/exec\";\nimport * as actionsGithub from \"@actions/github\";\nimport { DetSysAction, inputs } from \"detsys-ts\";\n\nconst EVENT_EXECUTION_FAILURE = \"execution_failure\";\n\nconst FACT_PUSH_ATTEMPT_FROM_PR = \"push_attempt_from_pr\";\n\ntype ExecutionEnvironment = {\n  FLAKEHUB_PUSH_VISIBILITY?: string;\n  FLAKEHUB_PUSH_TAG?: string;\n  FLAKEHUB_PUSH_REV?: string;\n  FLAKEHUB_PUSH_HOST?: string;\n  FLAKEHUB_PUSH_LOG_DIRECTIVES?: string;\n  FLAKEHUB_PUSH_LOGGER?: string;\n  FLAKEHUB_PUSH_GITHUB_TOKEN?: string;\n  FLAKEHUB_PUSH_NAME?: string;\n  FLAKEHUB_PUSH_REPOSITORY?: string;\n  FLAKEHUB_PUSH_DIRECTORY?: string;\n  FLAKEHUB_PUSH_GIT_ROOT?: string;\n  FLAKEHUB_PUSH_MY_FLAKE_IS_TOO_BIG?: string;\n  FLAKEHUB_PUSH_EXTRA_LABELS?: string;\n  FLAKEHUB_PUSH_SPDX_EXPRESSION?: string;\n  FLAKEHUB_PUSH_ERROR_ON_CONFLICT?: string;\n  FLAKEHUB_PUSH_INCLUDE_OUTPUT_PATHS?: string;\n  FLAKEHUB_PUSH_ROLLING?: string;\n  FLAKEHUB_PUSH_MIRROR?: string;\n  FLAKEHUB_PUSH_ROLLING_MINOR?: string;\n  GITHUB_CONTEXT?: string;\n};\n\nclass FlakeHubPushAction extends DetSysAction {\n  // Action inputs translated into environment variables to pass to flakehub-push\n  private visibility: string;\n  private tag: string;\n  private rev: string;\n  private host: string;\n  private logDirectives: string;\n  private logger: string;\n  private gitHubToken: string;\n  private repository: string;\n  private directory: string;\n  private gitRoot: string;\n  private myFlakeIsTooBig: boolean;\n  private spdxExpression: string;\n  private errorOnConflict: boolean;\n  private includeOutputPaths: boolean;\n  private rolling: boolean;\n  private mirror: boolean;\n  private name: string | null;\n  private rollingMinor: number | null;\n\n  constructor() {\n    super({\n      name: \"flakehub-push\",\n      fetchStyle: \"gh-env-style\",\n      diagnosticsSuffix: \"diagnostic\",\n      legacySourcePrefix: \"flakehub-push\",\n      requireNix: \"fail\",\n    });\n\n    // Inputs translated into environment variables for flakehub-push\n    this.visibility = inputs.getString(\"visibility\");\n    this.tag = inputs.getString(\"tag\");\n    this.rev = inputs.getString(\"rev\");\n    this.host = inputs.getString(\"host\");\n    this.logDirectives = inputs.getString(\"log-directives\");\n    this.logger = inputs.getString(\"logger\");\n    this.gitHubToken = inputs.getString(\"github-token\");\n    this.repository = inputs.getString(\"repository\");\n    this.directory = inputs.getString(\"directory\");\n    this.gitRoot = inputs.getString(\"git-root\");\n    this.myFlakeIsTooBig = inputs.getBool(\"my-flake-is-too-big\");\n    this.spdxExpression = inputs.getString(\"spdx-expression\");\n    this.errorOnConflict = inputs.getBool(\"error-on-conflict\");\n    this.includeOutputPaths = inputs.getBool(\"include-output-paths\");\n    this.rolling = inputs.getBool(\"rolling\");\n    this.mirror = inputs.getBool(\"mirror\");\n    this.name = inputs.getStringOrNull(\"name\");\n    this.rollingMinor = inputs.getNumberOrNull(\"rolling-minor\");\n  }\n\n  async main(): Promise<void> {\n    await this.pushFlakeToFlakeHub();\n  }\n\n  // No post step\n  async post(): Promise<void> {}\n\n  // extra-tags is deprecated but we still honor it\n  private get extraLabels(): string {\n    const labels = inputs.getString(\"extra-labels\"); // current input name\n    const tags = inputs.getString(\"extra-tags\"); // deprecated input name\n\n    // If `extra-labels` is set to something use it, otherwise use `extra-tags`.\n    // It `extra-tags` is also not set, which means that it's an empty string, that's\n    // still valid, as the flakehub-push CLI expects a comma-separated list here.\n    return labels !== \"\" ? labels : tags;\n  }\n\n  // We first check for a value using the `source-binary` input and fall back to the\n  // now-deprecated `flakehub-push-binary`\n  private get sourceBinary(): string | null {\n    const sourceBinaryInput = inputs.getStringOrNull(\"source-binary\");\n    const flakeHubPushBinaryInput = inputs.getStringOrNull(\n      \"flakehub-push-binary\",\n    );\n\n    return sourceBinaryInput !== \"\"\n      ? sourceBinaryInput\n      : flakeHubPushBinaryInput;\n  }\n\n  private executionEnvironment(): ExecutionEnvironment {\n    const env: ExecutionEnvironment = {};\n\n    env.FLAKEHUB_PUSH_VISIBILITY = this.visibility;\n    env.FLAKEHUB_PUSH_TAG = this.tag;\n    env.FLAKEHUB_PUSH_REV = this.rev;\n    env.FLAKEHUB_PUSH_HOST = this.host;\n    env.FLAKEHUB_PUSH_LOG_DIRECTIVES = this.logDirectives;\n    env.FLAKEHUB_PUSH_LOGGER = this.logger;\n    env.FLAKEHUB_PUSH_GITHUB_TOKEN = this.gitHubToken;\n    env.FLAKEHUB_PUSH_REPOSITORY = this.repository;\n    env.FLAKEHUB_PUSH_DIRECTORY = this.directory;\n    env.FLAKEHUB_PUSH_GIT_ROOT = this.gitRoot;\n    env.FLAKEHUB_PUSH_MY_FLAKE_IS_TOO_BIG = this.myFlakeIsTooBig.toString();\n    // not included: the now-deprecated FLAKEHUB_PUSH_EXTRA_TAGS\n    env.FLAKEHUB_PUSH_EXTRA_LABELS = this.extraLabels;\n    env.FLAKEHUB_PUSH_SPDX_EXPRESSION = this.spdxExpression;\n    env.FLAKEHUB_PUSH_ERROR_ON_CONFLICT = this.errorOnConflict.toString();\n    env.FLAKEHUB_PUSH_INCLUDE_OUTPUT_PATHS = this.includeOutputPaths.toString();\n    env.FLAKEHUB_PUSH_ROLLING = this.rolling.toString();\n    env.FLAKEHUB_PUSH_MIRROR = this.mirror.toString();\n\n    env.GITHUB_CONTEXT = JSON.stringify(actionsGithub.context);\n\n    if (this.name !== null) {\n      env.FLAKEHUB_PUSH_NAME = this.name;\n    }\n\n    if (this.rollingMinor !== null) {\n      env.FLAKEHUB_PUSH_ROLLING_MINOR = this.rollingMinor.toString();\n    }\n\n    return env;\n  }\n\n  async pushFlakeToFlakeHub(): Promise<void> {\n    if (actionsGithub.context.payload.pull_request) {\n      actionsCore.setFailed(\n        \"flakehub-push cannot be triggered from pull requests\",\n      );\n      this.addFact(FACT_PUSH_ATTEMPT_FROM_PR, true);\n      return;\n    }\n\n    const executionEnv = this.executionEnvironment();\n\n    const flakeHubPushBinary =\n      this.sourceBinary !== null\n        ? this.sourceBinary\n        : await this.fetchExecutable();\n\n    actionsCore.debug(\n      `execution environment: ${JSON.stringify(executionEnv, null, 2)}`,\n    );\n\n    const exitCode = await actionsExec.exec(flakeHubPushBinary, [], {\n      ignoreReturnCode: true,\n      env: {\n        ...executionEnv,\n        ...process.env, // To get PATH, etc.\n      },\n    });\n\n    if (exitCode !== 0) {\n      this.recordEvent(EVENT_EXECUTION_FAILURE, {\n        exitCode,\n      });\n      actionsCore.setFailed(`non-zero exit code of ${exitCode} detected`);\n    } else {\n      actionsCore.info(`Flake release was successfully published`);\n    }\n  }\n}\n\nfunction main(): void {\n  new FlakeHubPushAction().execute();\n}\n\nmain();\n"],"mappings":"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","names":[]}