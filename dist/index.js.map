{"version":3,"sources":["../ts/index.ts"],"sourcesContent":["import * as actionsCore from \"@actions/core\";\nimport { ActionOptions, IdsToolbox, inputs } from \"detsys-ts\";\n\ntype Visibility = \"public\" | \"unlisted\" | \"private\";\n\nclass FlakeHubPushAction {\n  idslib: IdsToolbox;\n  private visibility: Visibility;\n  private name: string | null;\n  private repository: string;\n  private mirror: boolean;\n  private directory: string;\n  private gitRoot: string;\n  private tag: string;\n  private rollingMinor: string | null;\n  private rolling: boolean;\n  private host: string;\n  private logDirectives: string;\n  private logger: string;\n  private githubToken: string;\n  private extraLabels: string;\n  private spdxExpression: string;\n  private errorOnConflict: boolean;\n  private includeOutputPaths: boolean;\n  private flakehubPushBinary: string;\n  private flakehubPushBranch: string;\n  private flakehubPushPullRequest: string;\n  private flakehubPushRevision: string;\n  private flakehubPushTag: string;\n  private flakehubPushUrl: string;\n\n  constructor() {\n    const options: ActionOptions = {\n      name: \"flakehub-push\",\n      fetchStyle: \"gh-env-style\",\n      diagnosticsUrl: new URL(\n        \"https://install.determinate.systems/flakehub-push/telemetry\",\n      ),\n      requireNix: \"ignore\",\n    };\n\n    this.idslib = new IdsToolbox(options);\n\n    // Inputs\n    // TODO: check enum values\n    const visibility = inputs.getString(\"visibility\") as Visibility;\n    this.visibility = visibility;\n\n    this.name = inputs.getStringOrNull(\"name\");\n    this.repository = inputs.getString(\"repository\");\n    this.mirror = inputs.getBool(\"mirror\");\n    this.directory = inputs.getString(\"directory\");\n    this.gitRoot = inputs.getString(\"git-root\");\n    this.tag = inputs.getString(\"tag\");\n    this.rollingMinor = inputs.getStringOrNull(\"rolling-minor\");\n    this.rolling = inputs.getBool(\"rolling\");\n    this.host = inputs.getString(\"host\");\n    this.logDirectives = inputs.getString(\"log-directives\");\n    this.logger = inputs.getString(\"logger\");\n    this.githubToken = inputs.getString(\"github-token\");\n    // extra-tags is deprecated but we still honor it\n    this.extraLabels =\n      inputs.getString(\"extra-labels\") === \"\"\n        ? inputs.getString(\"extra-tags\")\n        : \"\";\n    this.spdxExpression = inputs.getString(\"spdx-expression\");\n    this.errorOnConflict = inputs.getBool(\"error-on-conflict\");\n    this.includeOutputPaths = inputs.getBool(\"include-output-paths\");\n    this.flakehubPushBinary = inputs.getString(\"flakehub-push-binary\");\n    this.flakehubPushBranch = inputs.getString(\"flakehub-push-branch\");\n    this.flakehubPushPullRequest = inputs.getString(\"flakehub-push-pr\");\n    this.flakehubPushRevision = inputs.getString(\"flakehub-push-revision\");\n    this.flakehubPushTag = inputs.getString(\"flakehub-push-tag\");\n    this.flakehubPushUrl = inputs.getString(\"flakehub-push-url\");\n  }\n\n  async push(): Promise<void> {\n    actionsCore.info(\"Done\");\n  }\n}\n\nfunction main(): void {\n  const flakeHubPush = new FlakeHubPushAction();\n\n  flakeHubPush.idslib.onMain(async () => {\n    await flakeHubPush.push();\n  });\n\n  flakeHubPush.idslib.execute();\n}\n\nmain();\n"],"mappings":";AAAA,YAAY,iBAAiB;AAC7B,SAAwB,YAAY,cAAc;AAIlD,IAAM,qBAAN,MAAyB;AAAA,EA0BvB,cAAc;AACZ,UAAM,UAAyB;AAAA,MAC7B,MAAM;AAAA,MACN,YAAY;AAAA,MACZ,gBAAgB,IAAI;AAAA,QAClB;AAAA,MACF;AAAA,MACA,YAAY;AAAA,IACd;AAEA,SAAK,SAAS,IAAI,WAAW,OAAO;AAIpC,UAAM,aAAa,OAAO,UAAU,YAAY;AAChD,SAAK,aAAa;AAElB,SAAK,OAAO,OAAO,gBAAgB,MAAM;AACzC,SAAK,aAAa,OAAO,UAAU,YAAY;AAC/C,SAAK,SAAS,OAAO,QAAQ,QAAQ;AACrC,SAAK,YAAY,OAAO,UAAU,WAAW;AAC7C,SAAK,UAAU,OAAO,UAAU,UAAU;AAC1C,SAAK,MAAM,OAAO,UAAU,KAAK;AACjC,SAAK,eAAe,OAAO,gBAAgB,eAAe;AAC1D,SAAK,UAAU,OAAO,QAAQ,SAAS;AACvC,SAAK,OAAO,OAAO,UAAU,MAAM;AACnC,SAAK,gBAAgB,OAAO,UAAU,gBAAgB;AACtD,SAAK,SAAS,OAAO,UAAU,QAAQ;AACvC,SAAK,cAAc,OAAO,UAAU,cAAc;AAElD,SAAK,cACH,OAAO,UAAU,cAAc,MAAM,KACjC,OAAO,UAAU,YAAY,IAC7B;AACN,SAAK,iBAAiB,OAAO,UAAU,iBAAiB;AACxD,SAAK,kBAAkB,OAAO,QAAQ,mBAAmB;AACzD,SAAK,qBAAqB,OAAO,QAAQ,sBAAsB;AAC/D,SAAK,qBAAqB,OAAO,UAAU,sBAAsB;AACjE,SAAK,qBAAqB,OAAO,UAAU,sBAAsB;AACjE,SAAK,0BAA0B,OAAO,UAAU,kBAAkB;AAClE,SAAK,uBAAuB,OAAO,UAAU,wBAAwB;AACrE,SAAK,kBAAkB,OAAO,UAAU,mBAAmB;AAC3D,SAAK,kBAAkB,OAAO,UAAU,mBAAmB;AAAA,EAC7D;AAAA,EAEA,MAAM,OAAsB;AAC1B,IAAY,iBAAK,MAAM;AAAA,EACzB;AACF;AAEA,SAAS,OAAa;AACpB,QAAM,eAAe,IAAI,mBAAmB;AAE5C,eAAa,OAAO,OAAO,YAAY;AACrC,UAAM,aAAa,KAAK;AAAA,EAC1B,CAAC;AAED,eAAa,OAAO,QAAQ;AAC9B;AAEA,KAAK;","names":[]}